version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/ai_analyst
      - REDIS_URL=redis://redis:6379/0
      - CORS_ORIGINS=["http://localhost:3000","http://frontend:3000"]
    volumes:
      - ./backend:/app
      - model_storage:/app/models
      - upload_storage:/app/uploads
    depends_on:
      - postgres
      - redis
    networks:
      - ai-analyst-network

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api/v1
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - ai-analyst-network

  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=ai_analyst
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ai-analyst-network

  # Redis for Celery
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - ai-analyst-network

  # Celery Worker (Optional - for background tasks)
  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A app.celery worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/ai_analyst
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./backend:/app
      - model_storage:/app/models
      - upload_storage:/app/uploads
    depends_on:
      - postgres
      - redis
    networks:
      - ai-analyst-network

volumes:
  postgres_data:
  model_storage:
  upload_storage:

networks:
  ai-analyst-network:
    driver: bridge 